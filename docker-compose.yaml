version: "3.8"

services:
  # Node.js Application
  
  app:
    entrypoint: ["sh", "-c", "sleep 20 && node src/index.js"]
    build: .
    container_name: Automation-pipeline
    restart: always
    ports:
      - "3000:3000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:3000"]
        interval: 5s
        timeout: 5s
        retries: 10
        start_period: 40s

    networks:
      - app-network
    

  # MySQL Database
  db:
    image: mysql:8.0
    container_name: mysql
    restart: always
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      retries: 5 
    networks:
      - app-network
    volumes:
       - mysql-data:/var/lib/mysql


  tests:
    build:
      context: .
      dockerfile: docker-playwright
    depends_on:
      app:
        condition: service_healthy
    networks:
      - app-network

# Persistent Volumes
volumes:
  mysql-data:
    driver: local

# Docker Networks
networks:
  app-network:
    driver: bridge
